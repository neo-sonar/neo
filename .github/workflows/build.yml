name: Build

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  HOMEBREW_NO_INSTALL_CLEANUP: 1
  MACOSX_DEPLOYMENT_TARGET: 11.0

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux
            os: ubuntu-22.04

          - name: macOS
            os: macos-13

          - name: Windows
            os: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          lfs: true

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: >
          sudo apt update &&
          sudo apt install
          libcurl4-openssl-dev
          libasound2-dev
          libx11-dev
          libxinerama-dev
          libxext-dev
          libfreetype6-dev
          libwebkit2gtk-4.0-dev
          libglu1-mesa-dev
          xvfb
          ninja-build

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install ninja osxutils

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: choco install ninja ccache

      - name: Install clang
        if: runner.os != 'macOS'
        uses: egor-tensin/setup-clang@v1

      - name: Install ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: perceptual-convolution-build-${{ matrix.name }}

      - name: CMake configure
        shell: bash
        run: cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_OSX_ARCHITECTURES="arm64;x86_64"

      - name: CMake build
        shell: bash
        run: cmake --build build --target all

      - name: CTest
        shell: bash
        run: ctest --test-dir build -C Release --output-on-failure
